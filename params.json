{"name":"S3imageoptimizer","tagline":"Rails app for lossless compression of image on Amazon S3","body":"== S3 Image Optimizer\r\n\r\nHelps you optimize images stored on S3 and invalidate cloudfront cache. Do read the tips section might just be helpful\r\n\r\n=== Requirements\r\n\r\n1. ruby 2.2.x\r\n\r\n=== Important Details\r\n\r\n1. App is hardcoded to only work with *JPEG* & *JPG*. It can be easily modified to work with other formats. You will need to refer to *image-optim*[github.com/toy/image_optim] gem to understand how.\r\n2. The *expires* header has been hardcoded to *10* *years*.\r\n3. It adds a *header* to the image to mark as optimized. Header name can be changed by setting environment variable *AWS_IMAGE_METATAG*\r\n\r\n==== Setup\r\n\r\nInitalize following environment variables\r\n\r\n1. AWS_REGION\r\n2. AWS_BUCKET\r\n3. AWS_CLOUDFRONT_DISTRIBUTION_ID\r\n4. AWS_SECRET_ACCESS_KEY\r\n5. AWS_ACCESS_KEY_ID\r\n6. AWS_IMAGE_ACL           # default - public-read       reference S3 Canned ACL[(docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl)]\r\n7. AWS_IMAGE_METATAG       # default - img_optim         reference S3 User-Defined Metadata[(docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html)]\r\n8. AWS_IMAGE_CACHE_CONTROL # default - max-age=315576000 reference Cache Control[(www.w3.org/Protocols/rfc2616/rfc2616-sec13.html)]\r\n9. IMAGE_OPT_DATABASE\r\n10. IMAGE_OPT_DATABASE_USERNAME\r\n11. IMAGE_OPT_DATABASE_PASSWORD\r\n12. IMAGE_OPT_DATABASE_HOST\r\n\r\n==== Installation\r\n\r\n1. bundle install\r\n2. add your Active Job queue adapter (options Sidekiq, Resque, Delayed Job etc)\r\n\r\n==== Start Optimizing\r\n\r\n1. Start rails c\r\n2. Add paths within your s3 bucket that you want to optimize\r\n3. Start your active job queue worker\r\n\r\n  DirPath.create(:path => 'myfolder/', :invalidate_cloudfront => true) # '/' Character is mandatory after folder name\r\n\r\n==== Database\r\n\r\nCurrent instance is built around postgres but can easily work with any other relational database (mysql, sqlite etc)\r\n\r\nmysql - mysql2 gem requires **lmysqlclient-dev** package\r\n\r\npostgres - pg gem requires **libpq-dev** package\r\n\r\n==== Issues / Contribution\r\n\r\n1. Feel free to fork the repo\r\n2. Want something changed, submit a pull request\r\n3. Problem with the app post an issue\r\n\r\n==== Tips\r\n\r\n1. Run it in a EC2 instance in the same region as your s3 instance - Will save cost and give quick responses.\r\n2. Prefer keeping the number of jobs equivalent to the number of processors in an EC2 instance. # Can't explain low level OS Stuff.\r\n3. Prefer using postgres. Optimizing in postgres is far simpler than mysql at least for me. FYI I am a noob when it comes to databases.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}